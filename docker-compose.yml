version: "3.8"

services:
  db:
    container_name: storyly_demo_db
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${DB_NAME}"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s  

  pgadmin:
    container_name: storyly_demo_pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${DB_PASSWORD}
    ports:
      - 5050:80
    depends_on:
      db:
        condition: service_healthy
        restart: true
  
  redis:
    container_name: stortly_demo_redis
    image: redis:latest
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
  
  ab:
    container_name: apache_ab
    build: 
      context: .
      dockerfile: docker/ab.Dockerfile
    depends_on:
      app:
        condition: service_healthy
        restart: true
  
  app:
    container_name: storyly_demo_fastapi
    build: 
      context: .
      dockerfile: docker/fastapi.Dockerfile
    volumes:
      - .:/app
    ports:
      - 8001:8001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
    restart: always

volumes:
  postgres_data: